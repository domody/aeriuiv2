{
  "Accordion": {
    "Accordion": {
      "props": [
        {
          "name": "defaultValue",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "The value of the item that should be open by default."
        }
      ]
    },
    "AccordionItem": {
      "props": [
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "The unique value that identifies the accordion item."
        }
      ]
    },
    "AccordionTitle": {
      "props": [
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "Injected internally by AccordionItem. Do not set manually.",
          "internal": true
        }
      ]
    },
    "AccordionContent": {
      "props": []
    }
  },
  "Alert": {
    "Alert": {
      "props": [
        {
          "name": "variant",
          "type": "default | success | warning | destructive",
          "default": "default",
          "required": false,
          "description": "Controls the visual style of the alert."
        }
      ]
    },
    "AlertTitle": {
      "props": []
    },
    "AlertDescription": {
      "props": []
    }
  },
  "Badge": {
    "Badge": {
      "props": [
        {
          "name": "variant",
          "type": "default | secondary | destructive | outline",
          "default": "default",
          "required": false,
          "description": "Changes the visual style of the badge."
        }
      ]
    }
  },
  "Button": {
    "Button": {
      "props": [
        {
          "name": "variant",
          "type": "default | secondary | outline | destructive | ghost | link",
          "default": "default",
          "required": false,
          "description": "The variant of the button."
        },
        {
          "name": "size",
          "type": "default | sm | lg | icon",
          "default": "default",
          "required": false,
          "description": "The size of the button."
        },
        {
          "name": "asChild",
          "type": "boolean",
          "default": "false",
          "required": false,
          "description": "The button will pass its props to its child component instead of rendering a native button element. Useful when using custom components as the button root."
        }
      ]
    }
  },
  "Card": {
    "Card": {
      "props": []
    },
    "CardHeader": {
      "props": []
    },
    "CardContent": {
      "props": []
    },
    "CardFooter": {
      "props": []
    }
  },
  "Checkbox": {
    "Checkbox": {
      "props": [
        {
          "name": "defaultChecked",
          "type": "boolean",
          "default": "false",
          "required": false,
          "description": "Initial checked state for uncontrolled usage."
        },
        {
          "name": "checked",
          "type": "boolean",
          "default": "-",
          "required": false,
          "description": "Controls the checked state of the checkbox. If provided, the component is controlled."
        },
        {
          "name": "onCheckedChange",
          "type": "(checked: boolean) => void",
          "default": "-",
          "required": false,
          "description": "Callback invoked when the checked state changes."
        }
      ]
    }
  },
  "ContextMenu": {
    "ContextMenu": {
      "props": []
    },
    "ContextMenuTrigger": {
      "props": []
    },
    "ContextMenuContent": {
      "extends": "OptionList.OptionList"
    },
    "ContextMenuSection": {
      "extends": "OptionList.OptionListSection"
    },
    "ContextMenuItem": {
      "extends": "OptionList.OptionListItem"
    }
  },
  "Dropdown": {
    "Dropdown": {
      "props": [
        {
          "name": "onHover",
          "type": "boolean",
          "default": "false",
          "required": false,
          "description": "Whether the dropdown opens on hover."
        }
      ]
    },
    "DropdownMenu": {
      "extends": "OptionList.OptionList",
      "props": [
        {
          "name": "position",
          "type": "left | center | right | side",
          "default": "center",
          "required": false,
          "description": "Dropdown position."
        }
      ]
    },
    "DropdownSection": {
      "extends": "OptionList.OptionListSection"
    },
    "DropdownItem": {
      "extends": "OptionList.OptionListItem"
    }
  },
  "Input": {
    "Input": {
      "props": [
        {
          "name": "label",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "Adds a label to the input."
        },
        {
          "name": "labelType",
          "type": "stationary | floating",
          "default": "stationary",
          "required": false,
          "description": "Determines the positioning and styling of the label."
        },
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "Controls the value of the input. If passed, the input becomes controlled."
        },
        {
          "name": "onChange",
          "type": "(e: React.ChangeEvent<HTMLInputElement>) => void",
          "default": "-",
          "required": true,
          "description": "Callback invoked when the input value changes."
        }
      ]
    }
  },
  "Modal": {
    "Modal": {
      "props": []
    },
    "ModalTrigger": {
      "props": []
    },
    "ModalContent": {
      "props": []
    },
    "ModalHeader": {
      "props": []
    },
    "ModalBody": {
      "props": []
    },
    "ModalFooter": {
      "props": []
    },
    "ModalAction": {
      "props": []
    }
  },
  "OptionList": {
    "OptionList": {
      "props": [
        {
          "name": "title",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "Adds a title."
        },
        {
          "name": "titleSeparator",
          "type": "boolean",
          "default": "true",
          "required": false,
          "description": "Adds a separator under the title."
        }
      ]
    },
    "OptionListSection": {
      "props": [
        {
          "name": "separator",
          "type": "boolean",
          "default": "false",
          "required": false,
          "description": "Adds a separator under the section."
        }
      ]
    },
    "OptionListItem": {
      "extends": "Button.Button",
      "props": [
        {
          "name": "shortcut",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "Displays a kbd shortcut on the right side of the option list item."
        }
      ]
    }
  },
  "Selector": {
    "Selector": {
      "props": [
        {
          "name": "defaultValue",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "The value of the item that should be selected by default."
        },
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": false,
          "description": "Controls the value of the selector. If passed, the selector becomes controlled."
        },
        {
          "name": "onValueChange",
          "type": "(e: string) => void",
          "default": "-",
          "required": false,
          "description": "Callback invoked when the selected value changes."
        }
      ]
    },
    "SelectorTrigger": {
      "extends": "Button.Button",
      "props": [
        {
          "name": "placeholder",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "Adds a placeholder to the selector when no item is selected."
        }
      ]
    },
    "SelectorContent": {
      "extends": "OptionList.OptionList",
      "props": [
        {
          "name": "position",
          "type": "left | center | right",
          "default": "center",
          "required": false,
          "description": "Selector position."
        },
        {
          "name": "checkEnd",
          "type": "boolean",
          "default": "true",
          "required": false,
          "description": "Adds a check mark on the right side of the currently selected item."
        }
      ]
    },
    "SelectorContentItem": {
      "extends": "OptionList.OptionListItem",
      "props": [
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "The unique value that identifies the Selector Item."
        }
      ]
    }
  },
  "Separator": {
    "Separator": {
      "props": [
        {
          "name": "vertical",
          "type": "boolean",
          "default": "false",
          "required": false,
          "description": "Determines whether the separator is horizontal or vertical."
        }
      ]
    }
  },
  "Tabs": {
    "Tabs": {
      "props": [
        {
          "name": "defaultValue",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "The value of the tab that should be open by default."
        }
      ]
    },
    "TabList": {
      "props": [
        {
          "name": "position",
          "type": "left | center | right",
          "default": "left",
          "required": false,
          "description": "The positioning of the TabList."
        }
      ]
    },
    "Tab": {
      "props": [
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "The unique value that identifies the Tab and matches it to a TabContent."
        }
      ]
    },
    "TabContent": {
      "props": [
        {
          "name": "value",
          "type": "string",
          "default": "-",
          "required": true,
          "description": "The unique value that identifies the TabContent and matches it to a Tab."
        }
      ]
    }
  },
  "Tooltip": {
    "Tooltip": {
      "props": [
        {
          "name": "duration",
          "type": "number",
          "default": "300",
          "required": false,
          "description": "The amount of time the user must hover over the TooltipTrigger to show the TooltipContent, in ms."
        }
      ]
    },
    "TooltipContent": {
      "props": []
    },
    "TooltipTrigger": {
      "props": [
        {
          "name": "variant",
          "type": "default | secondary | outline | destructive",
          "default": "default",
          "required": false,
          "description": "The variant of the tooltip."
        },
        {
          "name": "position",
          "type": "top-start | top-center | top-end | bottom-start | bottom-center | bottom-end | left-start | left-center | left-end | right-start | right-center | right-end",
          "default": "top-center",
          "required": false,
          "description": "The position of the TooltipContent."
        }
      ]
    }
  }
}
